// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: region_of_interest_state.proto

#include "region_of_interest_state.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace DeviceSerialization {
PROTOBUF_CONSTEXPR RegionOfInterestState_ROIWindow::RegionOfInterestState_ROIWindow(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.x_)*/0u
  , /*decltype(_impl_.y_)*/0u
  , /*decltype(_impl_.width_)*/0u
  , /*decltype(_impl_.height_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RegionOfInterestState_ROIWindowDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegionOfInterestState_ROIWindowDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegionOfInterestState_ROIWindowDefaultTypeInternal() {}
  union {
    RegionOfInterestState_ROIWindow _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegionOfInterestState_ROIWindowDefaultTypeInternal _RegionOfInterestState_ROIWindow_default_instance_;
PROTOBUF_CONSTEXPR RegionOfInterestState::RegionOfInterestState(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.window_)*/{}
  , /*decltype(_impl_.columns_)*/{}
  , /*decltype(_impl_.rows_)*/{}
  , /*decltype(_impl_.optional_enabled_)*/{}
  , /*decltype(_impl_.optional_mode_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct RegionOfInterestStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RegionOfInterestStateDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RegionOfInterestStateDefaultTypeInternal() {}
  union {
    RegionOfInterestState _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RegionOfInterestStateDefaultTypeInternal _RegionOfInterestState_default_instance_;
}  // namespace DeviceSerialization
static ::_pb::Metadata file_level_metadata_region_5fof_5finterest_5fstate_2eproto[2];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_region_5fof_5finterest_5fstate_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_region_5fof_5finterest_5fstate_2eproto = nullptr;

const uint32_t TableStruct_region_5fof_5finterest_5fstate_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DeviceSerialization::RegionOfInterestState_ROIWindow, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DeviceSerialization::RegionOfInterestState_ROIWindow, _impl_.x_),
  PROTOBUF_FIELD_OFFSET(::DeviceSerialization::RegionOfInterestState_ROIWindow, _impl_.y_),
  PROTOBUF_FIELD_OFFSET(::DeviceSerialization::RegionOfInterestState_ROIWindow, _impl_.width_),
  PROTOBUF_FIELD_OFFSET(::DeviceSerialization::RegionOfInterestState_ROIWindow, _impl_.height_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DeviceSerialization::RegionOfInterestState, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::DeviceSerialization::RegionOfInterestState, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::DeviceSerialization::RegionOfInterestState, _impl_.window_),
  PROTOBUF_FIELD_OFFSET(::DeviceSerialization::RegionOfInterestState, _impl_.columns_),
  PROTOBUF_FIELD_OFFSET(::DeviceSerialization::RegionOfInterestState, _impl_.rows_),
  PROTOBUF_FIELD_OFFSET(::DeviceSerialization::RegionOfInterestState, _impl_.optional_enabled_),
  PROTOBUF_FIELD_OFFSET(::DeviceSerialization::RegionOfInterestState, _impl_.optional_mode_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::DeviceSerialization::RegionOfInterestState_ROIWindow)},
  { 10, -1, -1, sizeof(::DeviceSerialization::RegionOfInterestState)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::DeviceSerialization::_RegionOfInterestState_ROIWindow_default_instance_._instance,
  &::DeviceSerialization::_RegionOfInterestState_default_instance_._instance,
};

const char descriptor_table_protodef_region_5fof_5finterest_5fstate_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036region_of_interest_state.proto\022\023Device"
  "Serialization\"\330\002\n\025RegionOfInterestState\022"
  "\021\n\007enabled\030\001 \001(\010H\000\022B\n\004mode\030\002 \001(\01622.Devic"
  "eSerialization.RegionOfInterestState.ROI"
  "ModeH\001\022D\n\006window\030\003 \003(\01324.DeviceSerializa"
  "tion.RegionOfInterestState.ROIWindow\022\017\n\007"
  "columns\030\004 \003(\010\022\014\n\004rows\030\005 \003(\010\032@\n\tROIWindow"
  "\022\t\n\001x\030\001 \001(\r\022\t\n\001y\030\002 \001(\r\022\r\n\005width\030\003 \001(\r\022\016\n"
  "\006height\030\004 \001(\r\"\034\n\007ROIMode\022\007\n\003ROI\020\000\022\010\n\004RON"
  "I\020\001B\022\n\020optional_enabledB\017\n\roptional_mode"
  "b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_region_5fof_5finterest_5fstate_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_region_5fof_5finterest_5fstate_2eproto = {
    false, false, 408, descriptor_table_protodef_region_5fof_5finterest_5fstate_2eproto,
    "region_of_interest_state.proto",
    &descriptor_table_region_5fof_5finterest_5fstate_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_region_5fof_5finterest_5fstate_2eproto::offsets,
    file_level_metadata_region_5fof_5finterest_5fstate_2eproto, file_level_enum_descriptors_region_5fof_5finterest_5fstate_2eproto,
    file_level_service_descriptors_region_5fof_5finterest_5fstate_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_region_5fof_5finterest_5fstate_2eproto_getter() {
  return &descriptor_table_region_5fof_5finterest_5fstate_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_region_5fof_5finterest_5fstate_2eproto(&descriptor_table_region_5fof_5finterest_5fstate_2eproto);
namespace DeviceSerialization {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* RegionOfInterestState_ROIMode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_region_5fof_5finterest_5fstate_2eproto);
  return file_level_enum_descriptors_region_5fof_5finterest_5fstate_2eproto[0];
}
bool RegionOfInterestState_ROIMode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
constexpr RegionOfInterestState_ROIMode RegionOfInterestState::ROI;
constexpr RegionOfInterestState_ROIMode RegionOfInterestState::RONI;
constexpr RegionOfInterestState_ROIMode RegionOfInterestState::ROIMode_MIN;
constexpr RegionOfInterestState_ROIMode RegionOfInterestState::ROIMode_MAX;
constexpr int RegionOfInterestState::ROIMode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

// ===================================================================

class RegionOfInterestState_ROIWindow::_Internal {
 public:
};

RegionOfInterestState_ROIWindow::RegionOfInterestState_ROIWindow(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:DeviceSerialization.RegionOfInterestState.ROIWindow)
}
RegionOfInterestState_ROIWindow::RegionOfInterestState_ROIWindow(const RegionOfInterestState_ROIWindow& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RegionOfInterestState_ROIWindow* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.x_){}
    , decltype(_impl_.y_){}
    , decltype(_impl_.width_){}
    , decltype(_impl_.height_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.x_, &from._impl_.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.height_) -
    reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.height_));
  // @@protoc_insertion_point(copy_constructor:DeviceSerialization.RegionOfInterestState.ROIWindow)
}

inline void RegionOfInterestState_ROIWindow::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.x_){0u}
    , decltype(_impl_.y_){0u}
    , decltype(_impl_.width_){0u}
    , decltype(_impl_.height_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RegionOfInterestState_ROIWindow::~RegionOfInterestState_ROIWindow() {
  // @@protoc_insertion_point(destructor:DeviceSerialization.RegionOfInterestState.ROIWindow)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RegionOfInterestState_ROIWindow::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RegionOfInterestState_ROIWindow::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RegionOfInterestState_ROIWindow::Clear() {
// @@protoc_insertion_point(message_clear_start:DeviceSerialization.RegionOfInterestState.ROIWindow)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.height_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.height_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegionOfInterestState_ROIWindow::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 width = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 height = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RegionOfInterestState_ROIWindow::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeviceSerialization.RegionOfInterestState.ROIWindow)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 x = 1;
  if (this->_internal_x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_x(), target);
  }

  // uint32 y = 2;
  if (this->_internal_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_y(), target);
  }

  // uint32 width = 3;
  if (this->_internal_width() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_width(), target);
  }

  // uint32 height = 4;
  if (this->_internal_height() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(4, this->_internal_height(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeviceSerialization.RegionOfInterestState.ROIWindow)
  return target;
}

size_t RegionOfInterestState_ROIWindow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeviceSerialization.RegionOfInterestState.ROIWindow)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 x = 1;
  if (this->_internal_x() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_x());
  }

  // uint32 y = 2;
  if (this->_internal_y() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_y());
  }

  // uint32 width = 3;
  if (this->_internal_width() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_width());
  }

  // uint32 height = 4;
  if (this->_internal_height() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_height());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RegionOfInterestState_ROIWindow::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RegionOfInterestState_ROIWindow::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RegionOfInterestState_ROIWindow::GetClassData() const { return &_class_data_; }


void RegionOfInterestState_ROIWindow::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RegionOfInterestState_ROIWindow*>(&to_msg);
  auto& from = static_cast<const RegionOfInterestState_ROIWindow&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DeviceSerialization.RegionOfInterestState.ROIWindow)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_x() != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  if (from._internal_y() != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  if (from._internal_width() != 0) {
    _this->_internal_set_width(from._internal_width());
  }
  if (from._internal_height() != 0) {
    _this->_internal_set_height(from._internal_height());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RegionOfInterestState_ROIWindow::CopyFrom(const RegionOfInterestState_ROIWindow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeviceSerialization.RegionOfInterestState.ROIWindow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionOfInterestState_ROIWindow::IsInitialized() const {
  return true;
}

void RegionOfInterestState_ROIWindow::InternalSwap(RegionOfInterestState_ROIWindow* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegionOfInterestState_ROIWindow, _impl_.height_)
      + sizeof(RegionOfInterestState_ROIWindow::_impl_.height_)
      - PROTOBUF_FIELD_OFFSET(RegionOfInterestState_ROIWindow, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RegionOfInterestState_ROIWindow::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_region_5fof_5finterest_5fstate_2eproto_getter, &descriptor_table_region_5fof_5finterest_5fstate_2eproto_once,
      file_level_metadata_region_5fof_5finterest_5fstate_2eproto[0]);
}

// ===================================================================

class RegionOfInterestState::_Internal {
 public:
};

RegionOfInterestState::RegionOfInterestState(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:DeviceSerialization.RegionOfInterestState)
}
RegionOfInterestState::RegionOfInterestState(const RegionOfInterestState& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RegionOfInterestState* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.window_){from._impl_.window_}
    , decltype(_impl_.columns_){from._impl_.columns_}
    , decltype(_impl_.rows_){from._impl_.rows_}
    , decltype(_impl_.optional_enabled_){}
    , decltype(_impl_.optional_mode_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_optional_enabled();
  switch (from.optional_enabled_case()) {
    case kEnabled: {
      _this->_internal_set_enabled(from._internal_enabled());
      break;
    }
    case OPTIONAL_ENABLED_NOT_SET: {
      break;
    }
  }
  clear_has_optional_mode();
  switch (from.optional_mode_case()) {
    case kMode: {
      _this->_internal_set_mode(from._internal_mode());
      break;
    }
    case OPTIONAL_MODE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:DeviceSerialization.RegionOfInterestState)
}

inline void RegionOfInterestState::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.window_){arena}
    , decltype(_impl_.columns_){arena}
    , decltype(_impl_.rows_){arena}
    , decltype(_impl_.optional_enabled_){}
    , decltype(_impl_.optional_mode_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_optional_enabled();
  clear_has_optional_mode();
}

RegionOfInterestState::~RegionOfInterestState() {
  // @@protoc_insertion_point(destructor:DeviceSerialization.RegionOfInterestState)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RegionOfInterestState::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.window_.~RepeatedPtrField();
  _impl_.columns_.~RepeatedField();
  _impl_.rows_.~RepeatedField();
  if (has_optional_enabled()) {
    clear_optional_enabled();
  }
  if (has_optional_mode()) {
    clear_optional_mode();
  }
}

void RegionOfInterestState::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RegionOfInterestState::clear_optional_enabled() {
// @@protoc_insertion_point(one_of_clear_start:DeviceSerialization.RegionOfInterestState)
  switch (optional_enabled_case()) {
    case kEnabled: {
      // No need to clear
      break;
    }
    case OPTIONAL_ENABLED_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = OPTIONAL_ENABLED_NOT_SET;
}

void RegionOfInterestState::clear_optional_mode() {
// @@protoc_insertion_point(one_of_clear_start:DeviceSerialization.RegionOfInterestState)
  switch (optional_mode_case()) {
    case kMode: {
      // No need to clear
      break;
    }
    case OPTIONAL_MODE_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[1] = OPTIONAL_MODE_NOT_SET;
}


void RegionOfInterestState::Clear() {
// @@protoc_insertion_point(message_clear_start:DeviceSerialization.RegionOfInterestState)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.window_.Clear();
  _impl_.columns_.Clear();
  _impl_.rows_.Clear();
  clear_optional_enabled();
  clear_optional_mode();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegionOfInterestState::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool enabled = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _internal_set_enabled(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .DeviceSerialization.RegionOfInterestState.ROIMode mode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mode(static_cast<::DeviceSerialization::RegionOfInterestState_ROIMode>(val));
        } else
          goto handle_unusual;
        continue;
      // repeated .DeviceSerialization.RegionOfInterestState.ROIWindow window = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_window(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated bool columns = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedBoolParser(_internal_mutable_columns(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 32) {
          _internal_add_columns(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated bool rows = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedBoolParser(_internal_mutable_rows(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<uint8_t>(tag) == 40) {
          _internal_add_rows(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RegionOfInterestState::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DeviceSerialization.RegionOfInterestState)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool enabled = 1;
  if (_internal_has_enabled()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_enabled(), target);
  }

  // .DeviceSerialization.RegionOfInterestState.ROIMode mode = 2;
  if (_internal_has_mode()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      2, this->_internal_mode(), target);
  }

  // repeated .DeviceSerialization.RegionOfInterestState.ROIWindow window = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_window_size()); i < n; i++) {
    const auto& repfield = this->_internal_window(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated bool columns = 4;
  if (this->_internal_columns_size() > 0) {
    target = stream->WriteFixedPacked(4, _internal_columns(), target);
  }

  // repeated bool rows = 5;
  if (this->_internal_rows_size() > 0) {
    target = stream->WriteFixedPacked(5, _internal_rows(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DeviceSerialization.RegionOfInterestState)
  return target;
}

size_t RegionOfInterestState::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DeviceSerialization.RegionOfInterestState)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .DeviceSerialization.RegionOfInterestState.ROIWindow window = 3;
  total_size += 1UL * this->_internal_window_size();
  for (const auto& msg : this->_impl_.window_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated bool columns = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_columns_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  // repeated bool rows = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_rows_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::_pbi::WireFormatLite::Int32Size(static_cast<int32_t>(data_size));
    }
    total_size += data_size;
  }

  switch (optional_enabled_case()) {
    // bool enabled = 1;
    case kEnabled: {
      total_size += 1 + 1;
      break;
    }
    case OPTIONAL_ENABLED_NOT_SET: {
      break;
    }
  }
  switch (optional_mode_case()) {
    // .DeviceSerialization.RegionOfInterestState.ROIMode mode = 2;
    case kMode: {
      total_size += 1 +
        ::_pbi::WireFormatLite::EnumSize(this->_internal_mode());
      break;
    }
    case OPTIONAL_MODE_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RegionOfInterestState::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RegionOfInterestState::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RegionOfInterestState::GetClassData() const { return &_class_data_; }


void RegionOfInterestState::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RegionOfInterestState*>(&to_msg);
  auto& from = static_cast<const RegionOfInterestState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DeviceSerialization.RegionOfInterestState)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.window_.MergeFrom(from._impl_.window_);
  _this->_impl_.columns_.MergeFrom(from._impl_.columns_);
  _this->_impl_.rows_.MergeFrom(from._impl_.rows_);
  switch (from.optional_enabled_case()) {
    case kEnabled: {
      _this->_internal_set_enabled(from._internal_enabled());
      break;
    }
    case OPTIONAL_ENABLED_NOT_SET: {
      break;
    }
  }
  switch (from.optional_mode_case()) {
    case kMode: {
      _this->_internal_set_mode(from._internal_mode());
      break;
    }
    case OPTIONAL_MODE_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RegionOfInterestState::CopyFrom(const RegionOfInterestState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DeviceSerialization.RegionOfInterestState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegionOfInterestState::IsInitialized() const {
  return true;
}

void RegionOfInterestState::InternalSwap(RegionOfInterestState* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.window_.InternalSwap(&other->_impl_.window_);
  _impl_.columns_.InternalSwap(&other->_impl_.columns_);
  _impl_.rows_.InternalSwap(&other->_impl_.rows_);
  swap(_impl_.optional_enabled_, other->_impl_.optional_enabled_);
  swap(_impl_.optional_mode_, other->_impl_.optional_mode_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
  swap(_impl_._oneof_case_[1], other->_impl_._oneof_case_[1]);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegionOfInterestState::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_region_5fof_5finterest_5fstate_2eproto_getter, &descriptor_table_region_5fof_5finterest_5fstate_2eproto_once,
      file_level_metadata_region_5fof_5finterest_5fstate_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace DeviceSerialization
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::DeviceSerialization::RegionOfInterestState_ROIWindow*
Arena::CreateMaybeMessage< ::DeviceSerialization::RegionOfInterestState_ROIWindow >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DeviceSerialization::RegionOfInterestState_ROIWindow >(arena);
}
template<> PROTOBUF_NOINLINE ::DeviceSerialization::RegionOfInterestState*
Arena::CreateMaybeMessage< ::DeviceSerialization::RegionOfInterestState >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DeviceSerialization::RegionOfInterestState >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
